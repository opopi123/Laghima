{"sha":"d87a603d3773bbf98b4bfcb167a425911a754768","commit":{"author":{"name":"opopi123","email":"royjoo@buffalo.edu","date":"2014-09-25T19:45:24Z"},"committer":{"name":"opopi123","email":"royjoo@buffalo.edu","date":"2014-09-25T19:45:24Z"},"message":"First Commits\n\nBasic Projects in C++ and Python","tree":{"sha":"9442e8852537454283d1f486348ff510512896c7","url":"https://api.github.com/repos/opopi123/Laghima/git/trees/9442e8852537454283d1f486348ff510512896c7"},"url":"https://api.github.com/repos/opopi123/Laghima/git/commits/d87a603d3773bbf98b4bfcb167a425911a754768","comment_count":0},"url":"https://api.github.com/repos/opopi123/Laghima/commits/d87a603d3773bbf98b4bfcb167a425911a754768","html_url":"https://github.com/opopi123/Laghima/commit/d87a603d3773bbf98b4bfcb167a425911a754768","comments_url":"https://api.github.com/repos/opopi123/Laghima/commits/d87a603d3773bbf98b4bfcb167a425911a754768/comments","author":{"login":"opopi123","id":8919909,"avatar_url":"https://avatars.githubusercontent.com/u/8919909?v=2","gravatar_id":"","url":"https://api.github.com/users/opopi123","html_url":"https://github.com/opopi123","followers_url":"https://api.github.com/users/opopi123/followers","following_url":"https://api.github.com/users/opopi123/following{/other_user}","gists_url":"https://api.github.com/users/opopi123/gists{/gist_id}","starred_url":"https://api.github.com/users/opopi123/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/opopi123/subscriptions","organizations_url":"https://api.github.com/users/opopi123/orgs","repos_url":"https://api.github.com/users/opopi123/repos","events_url":"https://api.github.com/users/opopi123/events{/privacy}","received_events_url":"https://api.github.com/users/opopi123/received_events","type":"User","site_admin":false},"committer":{"login":"opopi123","id":8919909,"avatar_url":"https://avatars.githubusercontent.com/u/8919909?v=2","gravatar_id":"","url":"https://api.github.com/users/opopi123","html_url":"https://github.com/opopi123","followers_url":"https://api.github.com/users/opopi123/followers","following_url":"https://api.github.com/users/opopi123/following{/other_user}","gists_url":"https://api.github.com/users/opopi123/gists{/gist_id}","starred_url":"https://api.github.com/users/opopi123/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/opopi123/subscriptions","organizations_url":"https://api.github.com/users/opopi123/orgs","repos_url":"https://api.github.com/users/opopi123/repos","events_url":"https://api.github.com/users/opopi123/events{/privacy}","received_events_url":"https://api.github.com/users/opopi123/received_events","type":"User","site_admin":false},"parents":[{"sha":"49ca1cc1783f172e69565e4e7e3591a2d4dbcc07","url":"https://api.github.com/repos/opopi123/Laghima/commits/49ca1cc1783f172e69565e4e7e3591a2d4dbcc07","html_url":"https://github.com/opopi123/Laghima/commit/49ca1cc1783f172e69565e4e7e3591a2d4dbcc07"}],"stats":{"total":5970,"additions":5970,"deletions":0},"files":[{"sha":"402e80e24354ccf28808636c7fefe28ac51d4c06","filename":"Desktop/C++/piglatin.cpp","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/opopi123/Laghima/blob/d87a603d3773bbf98b4bfcb167a425911a754768/Desktop/C++/piglatin.cpp","raw_url":"https://github.com/opopi123/Laghima/raw/d87a603d3773bbf98b4bfcb167a425911a754768/Desktop/C++/piglatin.cpp","contents_url":"https://api.github.com/repos/opopi123/Laghima/contents/Desktop/C++/piglatin.cpp?ref=d87a603d3773bbf98b4bfcb167a425911a754768","patch":"@@ -0,0 +1,23 @@\n+#include <iostream>\n+#include <sstream>\n+#include <string>\n+using namespace std;\n+\n+int main(){\n+\n+while(1){\n+string line;\n+string subline;\n+cin >> line;\n+istringstream ss(line, istringstream::in);\n+\t\n+\twhile( ss >> subline){\n+\t\tchar a;\n+\t\ta =  subline[0];\n+\t\tsubline.erase(0,1);\n+\t\tcout << subline << a  << \"ay\"<< \" \" ;\n+\t\t\t\t\t}\n+\t}\n+}\n+\n+"},{"sha":"b28b6321940fa9a3fa73eb00d36ad29eef574bb3","filename":"Desktop/C++/second.cpp","status":"added","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/opopi123/Laghima/blob/d87a603d3773bbf98b4bfcb167a425911a754768/Desktop/C++/second.cpp","raw_url":"https://github.com/opopi123/Laghima/raw/d87a603d3773bbf98b4bfcb167a425911a754768/Desktop/C++/second.cpp","contents_url":"https://api.github.com/repos/opopi123/Laghima/contents/Desktop/C++/second.cpp?ref=d87a603d3773bbf98b4bfcb167a425911a754768","patch":"@@ -0,0 +1,4 @@\n+#include <string>\n+#include <iostream>\n+using namespace std;\n+"},{"sha":"9f5b458bd6e732b3747a5f95815123388a4dd1c5","filename":"Desktop/Python/bill.txt","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/opopi123/Laghima/blob/d87a603d3773bbf98b4bfcb167a425911a754768/Desktop/Python/bill.txt","raw_url":"https://github.com/opopi123/Laghima/raw/d87a603d3773bbf98b4bfcb167a425911a754768/Desktop/Python/bill.txt","contents_url":"https://api.github.com/repos/opopi123/Laghima/contents/Desktop/Python/bill.txt?ref=d87a603d3773bbf98b4bfcb167a425911a754768","patch":"@@ -0,0 +1,30 @@\n+Amendment I\n+\n+Congress shall make no law respecting an establishment of religion, or prohibiting the free exercise thereof; or abridging the freedom of speech, or of the press; or the right of the people peaceably to assemble, and to petition the government for a redress of grievances.\n+Amendment II\n+\n+A well regulated militia, being necessary to the security of a free state, the right of the people to keep and bear arms, shall not be infringed.\n+Amendment III\n+\n+No soldier shall, in time of peace be quartered in any house, without the consent of the owner, nor in time of war, but in a manner to be prescribed by law.\n+Amendment IV\n+\n+The right of the people to be secure in their persons, houses, papers, and effects, against unreasonable searches and seizures, shall not be violated, and no warrants shall issue, but upon probable cause, supported by oath or affirmation, and particularly describing the place to be searched, and the persons or things to be seized.\n+Amendment V\n+\n+No person shall be held to answer for a capital, or otherwise infamous crime, unless on a presentment or indictment of a grand jury, except in cases arising in the land or naval forces, or in the militia, when in actual service in time of war or public danger; nor shall any person be subject for the same offense to be twice put in jeopardy of life or limb; nor shall be compelled in any criminal case to be a witness against himself, nor be deprived of life, liberty, or property, without due process of law; nor shall private property be taken for public use, without just compensation.\n+Amendment VI\n+\n+In all criminal prosecutions, the accused shall enjoy the right to a speedy and public trial, by an impartial jury of the state and district wherein the crime shall have been committed, which district shall have been previously ascertained by law, and to be informed of the nature and cause of the accusation; to be confronted with the witnesses against him; to have compulsory process for obtaining witnesses in his favor, and to have the assistance of counsel for his defense.\n+Amendment VII\n+\n+In suits at common law, where the value in controversy shall exceed twenty dollars, the right of trial by jury shall be preserved, and no fact tried by a jury, shall be otherwise reexamined in any court of the United States, than according to the rules of the common law.\n+Amendment VIII\n+\n+Excessive bail shall not be required, nor excessive fines imposed, nor cruel and unusual punishments inflicted.\n+Amendment IX\n+\n+The enumeration in the Constitution, of certain rights, shall not be construed to deny or disparage others retained by the people.\n+Amendment X\n+\n+The powers not delegated to the United States by the Constitution, nor prohibited by it to the states, are reserved to the states respectively, or to the people.\n\\ No newline at end of file"},{"sha":"e9288b8a40ded75c276c2445494eaa404bbec973","filename":"Desktop/Python/exam.py","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/opopi123/Laghima/blob/d87a603d3773bbf98b4bfcb167a425911a754768/Desktop/Python/exam.py","raw_url":"https://github.com/opopi123/Laghima/raw/d87a603d3773bbf98b4bfcb167a425911a754768/Desktop/Python/exam.py","contents_url":"https://api.github.com/repos/opopi123/Laghima/contents/Desktop/Python/exam.py?ref=d87a603d3773bbf98b4bfcb167a425911a754768","patch":"@@ -0,0 +1,17 @@\n+ELEMENTS = 3\n+def calculate_grade(bridge1,road1,bridge2):\n+\tprint(\"calculating: \", bridge1, road1, bridge2)\n+\tavg = (bridge1 +road1 + bridge2)/ELEMENTS\n+\tif avg > 30:\n+\t\tgrade = 'Excellent'\n+\telif avg >20:\n+\t\tgrade = 'Good'\n+\telif avg > 10:\n+\t\tgrade = 'Average'\n+\telse:\n+\t\tgrade = 'Poor'\n+\treturn grade\n+def main():\n+\tprint(calculate_grade(25,30,12))\n+\tprint(calculate_grade(bridge2 = 10, road1=15, bridge1 = 18))\n+main()"},{"sha":"538efe49c31aa71a24af8733a98405435d09a577","filename":"Desktop/Python/hamlet.txt","status":"added","additions":5593,"deletions":0,"changes":5593,"blob_url":"https://github.com/opopi123/Laghima/blob/d87a603d3773bbf98b4bfcb167a425911a754768/Desktop/Python/hamlet.txt","raw_url":"https://github.com/opopi123/Laghima/raw/d87a603d3773bbf98b4bfcb167a425911a754768/Desktop/Python/hamlet.txt","contents_url":"https://api.github.com/repos/opopi123/Laghima/contents/Desktop/Python/hamlet.txt?ref=d87a603d3773bbf98b4bfcb167a425911a754768"},{"sha":"63d61f210aaac238ae60ad11842bd29bc96ad957","filename":"Desktop/Python/out.txt","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/opopi123/Laghima/blob/d87a603d3773bbf98b4bfcb167a425911a754768/Desktop/Python/out.txt","raw_url":"https://github.com/opopi123/Laghima/raw/d87a603d3773bbf98b4bfcb167a425911a754768/Desktop/Python/out.txt","contents_url":"https://api.github.com/repos/opopi123/Laghima/contents/Desktop/Python/out.txt?ref=d87a603d3773bbf98b4bfcb167a425911a754768","patch":"@@ -0,0 +1,40 @@\n+This is the statistic report for the file bill.txt\n+the word count for this file is 482\n+the letter count for this file is 2304\n+a = 7.204861111111111% : 166\n+b = 2.34375% : 54\n+c = 3.125% : 72\n+d = 3.2552083333333335% : 75\n+e = 13.49826388888889% : 311\n+f = 2.3003472222222223% : 53\n+g = 1.2586805555555556% : 29\n+h = 4.253472222222222% : 98\n+i = 7.074652777777778% : 163\n+j = 0.3472222222222222% : 8\n+k = 0.13020833333333331% : 3\n+l = 4.210069444444445% : 97\n+m = 2.560763888888889% : 59\n+n = 7.465277777777778% : 172\n+o = 7.074652777777778% : 163\n+p = 2.647569444444444% : 61\n+q = 0.08680555555555555% : 2\n+r = 6.553819444444445% : 151\n+s = 6.553819444444445% : 151\n+t = 8.637152777777777% : 199\n+u = 2.473958333333333% : 57\n+v = 0.8680555555555556% : 20\n+w = 1.215277777777778% : 28\n+x = 0.3472222222222222% : 8\n+y = 1.4322916666666665% : 33\n+z = 0.08680555555555555% : 2\n+The Ten Top Most Frequent Words: \n+the = 37\n+of = 24\n+to = 22\n+be = 20\n+shall = 16\n+in = 16\n+or = 15\n+and = 14\n+Amendment = 10\n+by = 9"},{"sha":"d8141e649fc6c6e5314f6a3120500bdd95ad68e7","filename":"Desktop/Python/pcode.py","status":"added","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/opopi123/Laghima/blob/d87a603d3773bbf98b4bfcb167a425911a754768/Desktop/Python/pcode.py","raw_url":"https://github.com/opopi123/Laghima/raw/d87a603d3773bbf98b4bfcb167a425911a754768/Desktop/Python/pcode.py","contents_url":"https://api.github.com/repos/opopi123/Laghima/contents/Desktop/Python/pcode.py?ref=d87a603d3773bbf98b4bfcb167a425911a754768","patch":"@@ -0,0 +1,8 @@\n+import sys\n+from random import randint\n+counter = 0\n+for x in range(0,10):\n+\tprint 'python is ez {}' ,format(counter)\n+\tprint randint(1,10000)\n+\tcounter = counter + 1\n+print counter"},{"sha":"13440fcffc574d70d49e1ef2f0c4105b735aedc5","filename":"Desktop/Python/project2.py","status":"added","additions":107,"deletions":0,"changes":107,"blob_url":"https://github.com/opopi123/Laghima/blob/d87a603d3773bbf98b4bfcb167a425911a754768/Desktop/Python/project2.py","raw_url":"https://github.com/opopi123/Laghima/raw/d87a603d3773bbf98b4bfcb167a425911a754768/Desktop/Python/project2.py","contents_url":"https://api.github.com/repos/opopi123/Laghima/contents/Desktop/Python/project2.py?ref=d87a603d3773bbf98b4bfcb167a425911a754768","patch":"@@ -0,0 +1,107 @@\n+#CSE408 Summer 2014\n+import os\n+#Roy Joo 50016076\n+#Project 2 Python\n+\n+import subprocess\n+import itertools\n+from os import listdir\n+from os.path import isfile, join\n+\n+\n+def filecomparator(filelist): // main method for comparing all files to each other  and printing results \n+\tprint(\"File Comparisons:\\n\")\n+\tfulllist = list(itertools.combinations(filelist,2))\n+\tfor (x,y) in fulllist:\n+\t\tcomparefile(x,y)\n+\tprint(\"\\n\")\n+\n+def comparefile(file1,file2): // compares file1 to file 2 using unix diff\n+\ttry:\n+\t\tcmpresult = subprocess.check_output(['diff', file1, file2])\n+\t\tif not cmpresult:\n+\t\t\tprint(\" {0} and {1} have the exact same contents!\".format(file1,file2))\n+\t\telse:\n+\t\t\tpass\n+\texcept subprocess.CalledProcessError as e:\n+\t\tpass\n+\n+def datechecker(filelist, month, day):\t\t// checks to see if month/day for each file > than month/day specified by user. Uses the ls -l command into unix\n+\tprint(\" Date Checks : for {0} / {1} /this year\\n\".format(month,day))\n+\tcmdresult = subprocess.check_output(['ls', '-l'],universal_newlines = True)\n+\tstr = cmdresult.split()\n+\tstr.pop(0)\n+\tstr.pop(0)\n+\tcounter = 0\n+\tlengthoflist = len(str)\n+\twhile counter < lengthoflist:\n+\t\tstr.pop(0)\n+\t\tstr.pop(0)\n+\t\tstr.pop(0)\n+\t\tstr.pop(0)\n+\t\tstr.pop(0)\n+\t\tm = str.pop(0)\n+\t\tm = monthconverter(m)\n+\t\tcounter = counter + 6\n+\t\tif m > month:\n+\t\t\tstr.pop(0)\n+\t\t\tstr.pop(0)\n+\t\t\tfn = str.pop(0)\n+\t\t\tprint(\"{0} is older than inputted date\".format(fn))\n+\t\t\tcounter = counter + 3\n+\t\telif m == month:\n+\t\t\td = str.pop(0)\n+\t\t\tif d > day:\n+\t\t\t\tstr.pop(0)\n+\t\t\t\tfn = str.pop(0)\n+\t\t\t\tcounter = counter + 3\n+\t\t\t\tprint(\"{0} is older than inputted date\".format(fn))\n+\t\telse: \n+\t\t\tstr.pop(0)\n+\t\t\tstr.pop(0)\n+\t\t\tstr.pop(0)\n+\t\t\tcounter = counter + 3\n+\t\t\n+\t\n+\t\t\n+def monthconverter(mth):\t\t// converts Months to number format \n+\tif mth == \"Jan\" or mth == b'Jan':\n+\t\treturn 1\n+\telif mth == \"Feb\" or mth == b'Feb':\n+\t\treturn 2\n+\telif mth == \"Mar\" or mth == b'Mar':\n+\t\treturn 3\n+\telif mth == \"Apr\" or mth == b'Apr':\n+\t\treturn 4\n+\telif mth == \"May\" or mth == b'May':\n+\t\treturn 5\n+\telif mth == \"Jun\" or mth == b'Jun':\n+\t\treturn 6\n+\telif mth == \"Jul\" or mth == b'Jul':\n+\t\treturn 7\n+\telif mth == \"Aug\" or mth == b'Aug':\n+\t\treturn 8\n+\telif mth == \"Sep\" or mth == b'Sep':\n+\t\treturn 9\n+\telif mth == \"Oct\" or mth == b'Oct':\n+\t\treturn 10\n+\telif mth == \"Nov\" or mth == b'Nov':\n+\t\treturn 11\n+\telif mth == \"Dec\" or mth == b'Dec':\n+\t\treturn 12\n+\telse: \n+\t\treturn 0\n+\n+def main():\n+\tmonth = input(\"Please specify a Month ex: Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\\n\")\n+\tmonth = monthconverter(month)\n+\tif month != 0:\n+\t\tday = input(\"Please specify a Day of the Month\\n\")\t\n+\t\tfiles = [ f for f in listdir() if isfile(join(f))]\n+\t\tprint(\"\\n\")\n+\t\tfilecomparator(files)\n+\t\tdatechecker(files, month, day)\n+\telse:\n+\t\tprint(\"Invalid Month. Please type one of the following : Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\\n\")\n+\t\tmain()\n+main()"},{"sha":"9accb02008c968c5b12aa57246b77e7261281226","filename":"Desktop/Python/project_1.py","status":"added","additions":148,"deletions":0,"changes":148,"blob_url":"https://github.com/opopi123/Laghima/blob/d87a603d3773bbf98b4bfcb167a425911a754768/Desktop/Python/project_1.py","raw_url":"https://github.com/opopi123/Laghima/raw/d87a603d3773bbf98b4bfcb167a425911a754768/Desktop/Python/project_1.py","contents_url":"https://api.github.com/repos/opopi123/Laghima/contents/Desktop/Python/project_1.py?ref=d87a603d3773bbf98b4bfcb167a425911a754768","patch":"@@ -0,0 +1,148 @@\n+#CSE408 Summer\n+#Roy Joo 50016076 \n+#Python 3.4\n+\n+import sys\n+import os.path\n+\n+def counter(x):\n+\tglobal letters\n+\tif x == \"a\" or x == \"A\":\n+\t\tletters['a']=letters['a'] + 1\n+\telif x == \"b\" or x == \"B\":\n+\t\tletters['b']=letters['b'] + 1\n+\telif x == \"c\" or x == \"C\":\n+\t\tletters['c']=letters['c'] + 1\n+\telif x == \"d\" or x == \"D\":\n+\t\tletters['d']=letters['d'] + 1\n+\telif x == \"e\" or x == \"E\":\n+\t\tletters['e']=letters['e'] + 1\n+\telif x == \"f\" or x == \"F\":\n+\t\tletters['f']=letters['f'] + 1\n+\telif x == \"g\" or x == \"G\":\n+\t\tletters['g']=letters['g'] + 1\n+\telif x == \"h\" or x == \"H\":\n+\t\tletters['h']=letters['h'] + 1\n+\telif x == \"i\" or x == \"I\":\n+\t\tletters['i']=letters['i'] + 1\n+\telif x == \"j\" or x == \"J\":\n+\t\tletters['j']=letters['j'] + 1\n+\telif x == \"k\" or x == \"K\":\n+\t\tletters['k']=letters['k'] + 1\n+\telif x == \"l\" or x == \"L\":\n+\t\tletters['l']=letters['l'] + 1\n+\telif x == \"m\" or x == \"M\":\n+\t\tletters['m']=letters['m'] + 1\n+\telif x == \"n\" or x == \"N\":\n+\t\tletters['n']=letters['n'] + 1\n+\telif x == \"o\" or x == \"O\":\n+\t\tletters['o']=letters['o'] + 1\n+\telif x == \"p\" or x == \"P\":\n+\t\tletters['p']=letters['p'] + 1\n+\telif x == \"q\" or x == \"Q\":\n+\t\tletters['q']=letters['q'] + 1\n+\telif x == \"r\" or x == \"R\":\n+\t\tletters['r']=letters['r'] + 1\n+\telif x == \"s\" or x == \"S\":\n+\t\tletters['s']=letters['s'] + 1\n+\telif x == \"t\" or x == \"T\":\n+\t\tletters['t']=letters['t'] + 1\n+\telif x == \"u\" or x == \"U\":\n+\t\tletters['u']=letters['u'] + 1\n+\telif x == \"v\" or x == \"U\":\n+\t\tletters['v']=letters['v'] + 1\n+\telif x == \"w\" or x == \"W\":\n+\t\tletters['w']=letters['w'] + 1\n+\telif x == \"x\" or x == \"X\":\n+\t\tletters['x']=letters['x'] + 1\n+\telif x == \"y\" or x == \"Y\":\n+\t\tletters['y']=letters['y'] + 1\n+\telif x == \"z\" or x == \"Z\":\n+\t\tletters['z']=letters['z'] + 1\n+\telse:\n+\t\tletters['others']=letters['others'] + 1\n+\t\n+def pro1(ifp,ofp):\n+\tglobal letters\n+\tglobal words\n+\tglobal inp\n+\t\n+\tx = ifp.read()\n+\twordlist = x.split()\n+\tfor w in wordlist:\n+\t\tif w in words:\n+\t\t\twords[w] += 1\n+\t\t\tfor l in w:\n+\t\t\t\tcounter(l)\n+\t\telse:\n+\t\t\twords[w] = 1\n+\t\t\tfor l in w:\n+\t\t\t\tcounter(l)\n+\tprint(words)\n+\tprint(letters)\n+\twc = wordcount()\n+\tswc = str(wc)\n+\tlc = lettercount()\n+\tslc = str(lc)\n+\tofp.write(\"This is the statistic report for the file \")\n+\tofp.write(inp)\n+\tofp.write(\"\\n\")\n+\tofp.write(\"the word count for this file is \")\n+\tofp.write(swc)\n+\tofp.write(\"\\n\")\n+\tofp.write(\"the letter count for this file is \")\n+\tofp.write(slc)\n+\tofp.write(\"\\n\")\n+\tfor i in range(97,123):\n+\t\tpercent = letters[chr(i)]/lc * 100\n+\t\tofp.write(chr(i))\n+\t\tofp.write(\" = \")\n+\t\tpercent = str(percent)\n+\t\tofp.write(percent)\n+\t\tofp.write(\"%\")\n+\t\tlstr = str(letters[chr(i)])\n+\t\tofp.write(\" : \")\n+\t\tofp.write(lstr)\n+\t\tofp.write(\"\\n\")\n+\tprinttoptenwords(words,ofp)\t\n+\tifp.close()\n+\tofp.close()\n+\n+def wordcount():\n+\tglobal words\n+\tx = 0\n+\tfor i in words:\n+\t\tx = x + words[i]\n+\treturn x\n+\n+def lettercount():\n+\tglobal letters\n+\tx = 0\n+\tfor i in letters:\n+\t\tx = x +letters[i]\n+\treturn x\n+def printtoptenwords(words,ofp):\n+\tofp.write(\"The Ten Top Most Frequent Words: \\n\")\n+\tfor w in sorted(words, key=words.get, reverse=True)[:10]:\n+\t\tofp.write(w)\n+\t\tofp.write(\" = \")\n+\t\twstr = str(words[w])\n+\t\tofp.write(wstr)\n+\t\tofp.write(\"\\n\")\n+\n+def main():\n+\tglobal letters\n+\tglobal words\n+\tglobal inp\n+\tletters = {'a': 0, 'b': 0, 'c': 0, 'd': 0, 'e': 0, 'f': 0, 'g': 0, 'h': 0, 'i': 0, 'j': 0, 'k': 0, 'l': 0, 'm': 0, 'n': 0, 'o': 0, 'p': 0, 'q': 0, 'r': 0, 's': 0, 't': 0, 'u': 0, 'v': 0, 'w': 0, 'x': 0, 'y': 0, 'z': 0, 'others':0}\n+\twords = {}\n+\tinp = input(\"give me an input filename\\n\")\n+\tif os.path.isfile(inp) == True:\n+\t\toutp = input(\"give me an output filename\\n\")\n+\t\tifp=open(inp,'r')\n+\t\tofp=open(outp,'w')\n+\t\tpro1(ifp,ofp)\n+\telse:\n+\t\tprint(\"the filename \", inp, \"does not exist in this directory\")\n+\t\tmain()\n+main()"}]}